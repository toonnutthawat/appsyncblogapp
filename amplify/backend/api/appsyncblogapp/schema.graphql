type Post 
@model 
@auth(
  rules: [
    { allow: owner, provider: userPools, ownerField: "username"}
    { allow: private, provider: userPools, operations: [read,update] }
  ]
)
@aws_cognito_user_pools # Include this directive to enable Cognito User Pools
{
  id: ID! 
  title: String!
  content: String!
  username: String @index(name: "postByUsername", queryField: "postByUsername")
  coverImage: String 
  likes: Int!
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"]) 
  listOfLike: [LikeStatus] @hasMany(indexName: "byPost", fields: ["id"])
}

type LikeStatus
  @model
  @auth(
    rules: [
      { allow: owner, provider: userPools, ownerField: "createBy" }
      { allow: private, provider: userPools, operations: [read,delete] }
    ]
  )
  @aws_cognito_user_pools # Include this directive to enable Cognito User Pools
{
  id: ID!
  status: Boolean!
  post: Post! @belongsTo(fields: ["postID"])
  postID: ID! @index(name: "byPost")
}

type Comment
  @model
  @auth(
    rules: [
      { allow: owner, provider: userPools, ownerField: "createBy" }
      { allow: private, provider: userPools, operations: [read] }
    ]
  )
  @aws_cognito_user_pools # Include this directive to enable Cognito User Pools
{
  id: ID!
  message: String!
  img: String
  post: Post! @belongsTo(fields: ["postID"])
  postID: ID! @index(name: "byPost")
}

type Chat
  @model
  @auth(
    rules: [
      { allow: owner, provider: userPools, ownerField: "username" }
      { allow: private, provider: userPools, operations: [read] }
    ]
  )
  @aws_cognito_user_pools # Include this directive to enable Cognito User Pools
{
  id: ID!
  message: String!
  username: String!
}
